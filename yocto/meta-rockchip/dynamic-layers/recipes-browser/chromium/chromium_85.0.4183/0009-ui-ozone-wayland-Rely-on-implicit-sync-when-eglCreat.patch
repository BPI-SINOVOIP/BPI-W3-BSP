From 5538bdfd027c12e961f2189ee6e54f1cd978c411 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 30 Sep 2020 11:48:52 +0800
Subject: [PATCH 9/9] ui: ozone: wayland: Rely on implicit sync when
 eglCreateSyncKHR failed

The mali utgard DDK not support eglCreateSyncKHR.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc b/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc
index 734e8b2..30464a2 100644
--- a/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc
+++ b/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc
@@ -133,7 +133,14 @@ void GbmSurfacelessWayland::SwapBuffersAsync(
     // TODO: the following should be replaced by a per surface flush as it gets
     // implemented in GL drivers.
     EGLSyncKHR fence = InsertFence(has_implicit_external_sync_);
-    CHECK_NE(fence, EGL_NO_SYNC_KHR) << "eglCreateSyncKHR failed";
+    DCHECK_NE(fence, EGL_NO_SYNC_KHR) << "eglCreateSyncKHR failed";
+
+    if (fence == EGL_NO_SYNC_KHR) {
+      SetRelyOnImplicitSync();
+      frame->ready = true;
+      SubmitFrame();
+      return;
+    }
 
     fence_wait_task = base::BindOnce(&WaitForEGLFence, GetDisplay(), fence);
   }
-- 
2.20.1

