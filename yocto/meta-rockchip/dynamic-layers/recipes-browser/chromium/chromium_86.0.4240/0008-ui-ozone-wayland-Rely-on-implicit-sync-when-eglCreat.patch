From 56c2bda4d3d427f649b4ae58a84af627f856a1bf Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 30 Sep 2020 11:48:52 +0800
Subject: [PATCH 08/11] ui: ozone: wayland: Rely on implicit sync when
 eglCreateSyncKHR failed

The mali utgard DDK not support eglCreateSyncKHR.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc b/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc
index 8ee69e5..1366952 100644
--- a/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc
+++ b/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc
@@ -114,6 +114,7 @@ void GbmSurfacelessWayland::SwapBuffersAsync(
   unsubmitted_frames_.push_back(std::make_unique<PendingFrame>());
 
   if (!use_egl_fence_sync_ || !frame->schedule_planes_succeeded) {
+no_fence:
     frame->ready = true;
     MaybeSubmitFrames();
     return;
@@ -134,7 +135,12 @@ void GbmSurfacelessWayland::SwapBuffersAsync(
     // TODO: the following should be replaced by a per surface flush as it gets
     // implemented in GL drivers.
     EGLSyncKHR fence = InsertFence(has_implicit_external_sync_);
-    CHECK_NE(fence, EGL_NO_SYNC_KHR) << "eglCreateSyncKHR failed";
+    DCHECK_NE(fence, EGL_NO_SYNC_KHR) << "eglCreateSyncKHR failed";
+
+    if (fence == EGL_NO_SYNC_KHR) {
+      SetRelyOnImplicitSync();
+      goto no_fence;
+    }
 
     fence_wait_task = base::BindOnce(&WaitForEGLFence, GetDisplay(), fence);
   }
-- 
2.20.1

